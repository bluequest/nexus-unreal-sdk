// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"

/**
 * Unreal SDK prototyping code
 * This file will go away once the SDK generator is ready, and we know what we want the interface to look like.
 */

namespace NexusSDK
{
	/**
	 * The cat facts API!
	 * 
	 * Currently just one function to act as a guide
	 */

	/**
	 * A struct containing input values accepted by GetCatFacts
	 */
	struct FGetCatFactsRequest
	{
		int32 MaxLength;			// The max length of returned cat fact strings.
		int32 Limit;				// The number of cat facts to retrieve.
	};

	/**
	 * A struct containing output values returned by GetCatFacts.
	 * Contains an array of strings with the cat facts, and a bool indicating
	 * success, you should not use any of the returned data if this bool is false.
	 */
	struct FGetCatFactsResponse
	{
		TArray<FString> Facts;		// An array of strings containing cat facts.
		bool bSuccess = false;		// Whether the operation was successful, and whether the other parameters are valid.
	};
	
	/**
	 * Declares a delegate that is executed when GetCatFacts has recieved
	 * and decoded an HTTP response (even on failure).
	 * Keep in mind that this is executed on the HTTP thread.
	 *
	 * @param Response Struct filled with data returned by the API.
	 */
	DECLARE_DELEGATE_OneParam(FOnGetCatFactsComplete, const FGetCatFactsResponse& /*Response*/);

	/**
	 * Returns a list of cat facts from the cat facts API.
	 *
	 * @param Request A reference to input data.
	 * @param Callback The delegate to execute.
	 */
	NEXUSUNREALSDK_API void GetCatFacts(const FGetCatFactsRequest& Request, FOnGetCatFactsComplete& Callback);
	
	/**
	 * Return all creators and their creator details, including unique id and creator code
	 * Since this is temporary code that will go away soon, I'm not going to document it in detail
	 */

	/** (Should be autogenerated, see CatFacts for an example) */
	struct FGetCreatorsRequest
	{
		FString PublicKey;		// A copy of your public publisher key

		int32 Page = 0;
		int32 PageSize = 0;
		FString GroupId;		// Return creators from a specific group
	};

	/** (See CatFacts for what this comment should look like) */
	struct FGetCreatorsResponse
	{
		TArray<FString> Facts;	// A list of strings of cat facts
		bool bSuccess = false;
	};

	/**
	 * TBD: Because all of these functions will probably have the same parameter list,
	 * it may be best to explain these in a general sense at the top of the file, rather
	 * than every time they appear.
	 */
	DECLARE_DELEGATE_OneParam(FOnGetCreatorsComplete, const FGetCreatorsResponse& /*Response*/);
	NEXUSUNREALSDK_API void GetCreators(const FGetCreatorsRequest& Request, FOnGetCreatorsComplete& Callback);

}
